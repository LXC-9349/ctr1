<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ctr</groupId>
	<artifactId>ctr</artifactId>
	<version>0.0.2</version>
	<name>ctr</name>
	<description>ctr</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
               <exclusion>
                   <groupId>org.springframework.boot</groupId>
                   <artifactId>spring-boot-starter-logging</artifactId>
               </exclusion>
           </exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.0.1</version>
		</dependency>
		<!--<dependency>
			<groupId>io.dubbo.springboot</groupId>
			<artifactId>spring-boot-starter-dubbo</artifactId>
			<version>1.0.0</version>
		</dependency>-->
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.spring4all</groupId>
			<artifactId>swagger-spring-boot-starter</artifactId>
			<version>1.9.0.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper-spring-boot-starter</artifactId>
		    <version>1.2.10</version>
		</dependency>
		<!-- <dependency>
            <groupId>com.github.terran4j</groupId>
            <artifactId>terran4j-commons-api2doc</artifactId>
            <version>1.0.2</version>
        </dependency> -->
        <dependency>
		  	<groupId>com.belerweb</groupId>
		  	<artifactId>pinyin4j</artifactId>
		  	<version>2.5.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
		 	<groupId>com.alibaba</groupId>
		  	<artifactId>fastjson</artifactId>
		  	<version>1.2.47</version>
		</dependency>
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-configuration-processor</artifactId>
        	<optional>true</optional>
        </dependency>
        <dependency>
		  	<groupId>commons-codec</groupId>
		  	<artifactId>commons-codec</artifactId>
		</dependency>
        <dependency>
		  	<groupId>org.apache.commons</groupId>
		  	<artifactId>commons-lang3</artifactId>
		</dependency>
        <dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-text</artifactId>
		    <version>1.6</version>
		</dependency>
        <dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.auth0</groupId>
		    <artifactId>java-jwt</artifactId>
		    <version>3.4.0</version>
		</dependency>
		<dependency>
		  	<groupId>redis.clients</groupId>
		  	<artifactId>jedis</artifactId>
		</dependency>
		<dependency>
        	<groupId>log4j</groupId>
        	<artifactId>log4j</artifactId>
        	<version>1.2.17</version>
        </dependency>
		<dependency>
		  	<groupId>com.yunhus</groupId>
		  	<artifactId>yunhus-redis</artifactId>
		  	<version>1.2.4</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/main/resources/lib/yunhus-redis-1.2.4.jar</systemPath>
		</dependency>
		<dependency>
		  <groupId>com.yunhus.commons</groupId>
		  <artifactId>jm</artifactId>
		  <version>1.0</version>
		</dependency>
		<dependency>
		  <groupId>com.yunhus</groupId>
		  <artifactId>yunhus-file-server</artifactId>
		  <version>1.1.1</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/main/resources/lib/yunhus-file-server-1.1.1.jar</systemPath>
		</dependency>
		<!-- freemarker 用于代码生成 -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>3.0.3</version>
            <exclusions>
            	<exclusion>
          			<groupId>*</groupId>
					<artifactId>*</artifactId>
        		</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-web</artifactId>
            <version>3.0.3</version>
            <exclusions>
            	<exclusion>
          			<groupId>*</groupId>
					<artifactId>*</artifactId>
        		</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-annotation</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
		  <groupId>org.apache.poi</groupId>
		  <artifactId>poi</artifactId>
		  <version>3.17</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.poi</groupId>
		  <artifactId>poi-ooxml</artifactId>
		  <version>3.16</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.poi</groupId>
		  <artifactId>poi-ooxml-schemas</artifactId>
		  <version>3.16</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.poi</groupId>
		  <artifactId>poi-scratchpad</artifactId>
		  <version>3.16</version>
		</dependency>
		<!--dubbo-->
		<dependency>
			<groupId>com.alibaba.spring.boot</groupId>
			<artifactId>dubbo-spring-boot-starter</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.7</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--gson-->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.flywaydb</groupId>
		  <artifactId>flyway-core</artifactId>
		</dependency>
	</dependencies>
	
	<profiles>
	    <profile>
      	  <id>product</id>
		  <properties>
		  	<env>product</env>
		  </properties> 
	    </profile>
	</profiles>

	<build>
		<finalName>ctr</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
			</plugin>
			<!-- 打JAR包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- 不打包资源文件 -->
					<excludes>
						<exclude>ftls/**</exclude>
						<exclude>product/**</exclude>
						<exclude>application.properties</exclude>
						<exclude>generator.properties</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<useUniqueVersions>false</useUniqueVersions>
							<mainClass>com.ctr.crm.CtrApplication</mainClass>
						</manifest>
					</archive>
					<outputDirectory>${project.build.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>
			<!-- 复制依赖的jar包到指定的文件夹里  -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-dependency-plugin</artifactId>
		        <executions>
		            <execution>
		                <id>copy-dependencies</id>
		                <phase>package</phase>
		                <goals>
		                    <goal>copy-dependencies</goal>
		                </goals>
		                <configuration>
		                    <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
		                    <excludeTransitive>false</excludeTransitive>
		                    <stripVersion>false</stripVersion>
		                    <includeScope>runtime</includeScope>
		                </configuration>
		            </execution>
		        </executions>
		    </plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <configuration>
		          <skip>true</skip>
		        </configuration>
		    </plugin>
		    <plugin>
            	 <groupId>org.apache.maven.plugins</groupId>
            	 <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            	 <executions>
	                <execution>
	                    <phase>compile</phase>
	                    <goals>
	                        <goal>copy-resources</goal>
	                    </goals>
	                    <configuration>
		　　　　　　　　　　　　　　    <!-- 覆盖原有文件 -->
		　　　　　　　　　　　　　　	<overwrite>true</overwrite>
		                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
	                        <!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
	                        <!-- 待处理的资源定义 -->
	                        <resources>
	                            <resource>
	                                <!-- 指定resources插件处理哪个目录下的资源文件 -->
	                                <directory>src/main/resources/${env}</directory>
	                                <filtering>true</filtering>
	                            </resource>
	                        </resources>
	                    </configuration>
	                    <inherited></inherited>
                	</execution>
            	</executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                	<appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
